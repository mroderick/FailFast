var FailFast=(function(a){function b(a){var b=new Error(a);b.name="FailFast.AssertError",b.message=b.message||a;throw b}return{VERSION:"1.0",assert:function(a,c){return c===true||b(a)},assertNotNull:function(a,c){return c!==null||b(a)},assertBoolean:function(c,d){return d!==a&&Object.prototype.toString.call(d)==="[object Boolean]"||b(c)},assertString:function(c,d){return d!==a&&Object.prototype.toString.call(d)==="[object String]"||b(c)},assertArray:function(c,d){return d!==a&&Object.prototype.toString.call(d)==="[object Array]"||b(c)},assertFunction:function(c,d){return d!==a&&Object.prototype.toString.call(d)==="[object Function]"||b(c)},assertDate:function(c,d){return d!==a&&Object.prototype.toString.call(d)==="[object Date]"||b(c)},assertNumber:function(a,c){return Object.prototype.toString.call(c)==="[object Number]"||b(a)},assertNormalNumber:function(a,c){return+c===c&&isFinite(c)||b(a)},assertObject:function(c,d){return d!==a&&Object.prototype.toString.call(d)==="[object Object]"||b(c)},assertHasProperty:function(a,c,d){return d in c||b(a)},assertMatch:function(a,c,d){return c.test(d)||b(a)}}})()